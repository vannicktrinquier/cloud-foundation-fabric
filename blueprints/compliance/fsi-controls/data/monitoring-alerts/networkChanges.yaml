networkChanges:
  alert_strategy:
    auto_close: 604800s
    notification_rate_limit:
      period: 300s
  combiner: OR
  conditions:
  - condition_matched_log:
      filter: "resource.type=\"gce_network\" AND  (\n  protoPayload.methodName:\"\
        compute.networks.insert\" OR \n  protoPayload.methodName:\"compute.networks.patch\"\
        \ OR \n  protoPayload.methodName:\"compute.networks.delete\" OR \n  protoPayload.methodName:\"\
        compute.networks.addPeering\" OR \n  protoPayload.methodName:\"compute.networks.updatePeering\"\
        \ OR \n  protoPayload.methodName:\"compute.networks.removePeering\"\n)"
      label_extractors:
        method_name: EXTRACT(protoPayload.methodName)
        network_id: EXTRACT(labels.network_id)
        principal: EXTRACT(protoPayload.authenticationInfo.principalEmail)
        project_id: EXTRACT(labels.project_id)
    display_name: 'Log match condition: network changes'
  display_name: VPC Network Changes
  documentation:
    content: "Log-based alerting policy in project ${project} detected VPC Network\
      \ changes.\nThis alert helps ensure security by monitoring creation, modification,\
      \ deletion, or peering changes to VPC networks. ``` resource.type=\"gce_network\"\
      \ AND  (\n  protoPayload.methodName:\"compute.networks.insert\" OR \n  protoPayload.methodName:\"\
      compute.networks.patch\" OR \n  protoPayload.methodName:\"compute.networks.delete\"\
      \ OR \n  protoPayload.methodName:\"compute.networks.addPeering\" OR \n  protoPayload.methodName:\"\
      compute.networks.updatePeering\" OR \n  protoPayload.methodName:\"compute.networks.removePeering\"\
      \n) ```"
    mime_type: text/markdown
  notification_channels:
  - projects/fsi-foundation-logging-d872/notificationChannels/14935710665502908194
